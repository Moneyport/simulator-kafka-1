{{- $kafkaHost := ( .Values.config.kafka_host | replace "$release_name" .Release.Name ) -}}

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "simmsg.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "simmsg.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "simmsg.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "simmsg.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      {{- if .Values.metrics.enabled }}
      annotations:
        prometheus.io/port: "{{ .Values.service.internalPort }}"
        prometheus.io/scrape: "true"
      {{- end }}
    spec:
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
    {{- if .Values.init.enabled }}
      initContainers:
        - name: {{ .Values.init.kafka.name }}
          image: {{ .Values.init.kafka.repository }}:{{ .Values.init.kafka.tag }}
          imagePullPolicy: {{ .Values.init.kafka.pullPolicy }}
          command:
            - sh
            - "-c"
            - {{ (.Values.init.kafka.command | replace "$kafka_host" $kafkaHost | replace "$kafka_port" (printf "%.0f" .Values.config.kafka_port) ) | quote }}
          env:
          {{- range $envItem := .Values.init.kafka.env }}
            - name: {{ $envItem.name }}
              value: {{ $envItem.value }}
          {{- end }}
        {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # command:
          #   - sh
          #   - -c
          #   - exec tail -f /dev/null
          command:
            - sh
            - "-c"
            - {{ .Values.image.command | quote }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          volumeMounts:
            - name: {{ template "simmsg.fullname" . }}-config-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: {{ .Values.config.log_level | quote }}
            - name: LOG_FILTER
              value: {{ .Values.config.log_filter | quote }}
            - name: EVENT_SDK_LOG_FILTER
              value: {{ .Values.config.event_log_filter | quote }}
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: {{ .Values.config.event_log_metadata_only | quote }}
      volumes:
        - name: {{ template "simmsg.fullname" . }}-config-volume
          configMap:
            name: {{ template "simmsg.fullname" . }}-config
            items:
              - key: default.json
                path: default.json
