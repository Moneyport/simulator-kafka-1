REVISION: 1
RELEASED: Mon Mar 30 17:10:27 2020
CHART: simulated-message-handler-1.0.0
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
config:
  consumer:
    batch_size_value: 10
    host: localhost
    port: 6868
  kafka_host: cssk-kafka
  kafka_port: 9092
  producer:
    host: localhost
    port: 6868
  statistics:
    intervalMs: 1000
  topics: topic-notification-event
global:
  config:
    affinity: {}
    nodeSelector: {}
    tolerations: {}
image:
  command: node src/index.js connect --type notification --action event
  env: {}
  pullPolicy: Always
  repository: chinchillah/simulated-message-handler
  tag: v0.1
ingress:
  annotations: null
  enabled: true
  externalPath: /
  hosts:
    api: simulated-message-handler.local
  tls: null
init:
  enabled: true
  kafka:
    command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
      do echo waiting for Kafka; sleep 2; done;
    env: {}
    name: wait-for-kafka
    pullPolicy: Always
    repository: solsson/kafka
    tag: latest
kafka:
  additionalPorts: {}
  configurationOverrides:
    default.replication.factor: 1
    offsets.topic.replication.factor: 1
  enabled: false
  envOverrides:
    kafka.log4j.loggers: kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
    kafka.log4j.root.loglevel: INFO
  external:
    domain: cluster.local
    enabled: false
    firstListenerPort: 31090
    init:
      image: lwolf/kubectl_deployer
      imagePullPolicy: IfNotPresent
    servicePort: 19092
  image: confluentinc/cp-kafka
  imagePullPolicy: IfNotPresent
  jmx:
    configMap:
      enabled: true
      overrideConfig: {}
      overrideName: ""
    port: 5555
    whitelistObjectNames:
    - kafka.controller:*
    - kafka.server:*
    - java.lang:*
    - kafka.network:*
    - kafka.log:*
  kafkaHeapOptions: -Xmx1G -Xms1G
  logSubPath: logs
  nameOverride: kafka
  nodeSelector: {}
  persistence:
    enabled: false
    mountPath: /opt/kafka/data
    size: 1Gi
  podManagementPolicy: OrderedReady
  prometheus:
    jmx:
      enabled: true
      image: solsson/kafka-prometheus-jmx-exporter@sha256
      imageTag: a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8
      interval: 10s
      port: 5556
      resources: {}
    kafka:
      enabled: true
      image: danielqsj/kafka-exporter
      interval: 10s
      port: 9308
      resources: {}
    operator:
      enabled: false
      serviceMonitor:
        namespace: monitoring
        selector:
          prometheus: kube-prometheus
  rbac:
    enabled: true
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicas: 5
  resources: {}
  terminationGracePeriodSeconds: 60
  updateStrategy:
    type: OnDelete
  zookeeper:
    enabled: true
    heap: 1G
    imagePullPolicy: IfNotPresent
    persistence:
      enabled: false
    port: 2181
    replicaCount: 3
    resources: null
    url: ""
livenessProbe:
  enabled: false
  httpGet:
    path: /health
  initialDelaySeconds: 30
  periodSeconds: 15
metrics:
  config:
    defaultLabels:
      serviceName: simulated-message-handler
    prefix: sim_kafka_
    timeout: 5000
  enabled: true
readinessProbe:
  enabled: false
  httpGet:
    path: /health
  initialDelaySeconds: 30
  periodSeconds: 15
replicaCount: 1
resources: {}
service:
  annotations: {}
  external:
    enabled: false
    ip: 10.0.2.2
    ports:
      api:
        externalPort: 3081
        name: simmsg
  externalPort: 80
  hostname: localhost
  internalPort: 6868
  name: simmsg
  type: ClusterIP

HOOKS:
MANIFEST:

---
# Source: simulated-message-handler/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: testname-simulated-message-handler-config
  labels:
    app.kubernetes.io/name: simulated-message-handler
    app.kubernetes.io/instance: testname
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Tiller
    helm.sh/chart: simulated-message-handler-1.0.0
data:
  default.json: "{    \"PORT\": 6868,\n     \"HOSTNAME\": \"localhost\",\n\n     \"ENDPOINT_CACHE_CONFIG\": {\n        \"expiresIn\": 180000,\n        \"generateTimeout\": 30000\n      },\n      \"ENDPOINT_SECURITY\":{\n        \"TLS\": {\n          \"rejectUnauthorized\": true\n        }\n      },\n      \"MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS\": 200,\n      \"MAX_FULFIL_TIMEOUT_DURATION_SECONDS\": 300,\n      \"TRANSFERS\": {\n        \"SEND_TRANSFER_CONFIRMATION_TO_PAYEE\": false\n      },\n      \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n      },\n      \"AMOUNT\": {\n        \"PRECISION\": 10,\n        \"SCALE\": 2\n      },\n      \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n          \"DISABLED\": false\n        }\n      },\n      \"INSTRUMENTATION\": {\n        \"METRICS\": {\n          \"DISABLED\": false,\n          \"config\": {\n            \"timeout\": 5000,\n            \"prefix\": \"moja_\",\n            \"defaultLabels\": {\n              \"serviceName\": \"simulated-message-handler\"\n            }\n          }\n        }\n      },\n      \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n          \"GENERAL_TOPIC_TEMPLATE\": {\n            \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n              \"REGEX\": \"topic-(.*)-(.*)\"\n          }\n        },\n        \"CONSUMER\": {\n          \"NOTIFICATION\": {\n            \"EVENT\": {\n              \"config\": {\n                \"options\": {\n                  \"mode\": 2,\n                  \"batchSize\": 1,\n                  \"pollFrequency\": 10,\n                  \"recursiveTimeout\": 100,\n                  \"messageCharset\": \"utf8\",\n                  \"messageAsJSON\": true,\n                  \"sync\": true,\n                  \"consumeTimeout\": 1000\n                },\n                \"rdkafkaConf\": {\n                  \"client.id\": \"simmsg-con-notification-event\",\n                  \"group.id\": \"simmsg-group-notification-event\",\n                  \"metadata.broker.list\": \"cssk-kafka:9092\",\n                  \"queue.buffering.max.messages\": 100,\n                  \"queue.buffering.max.ms\": 50,\n                  \"enable.auto.commit\": true,\n                  \"statistics.interval.ms\": 1000\n                },\n                \"topicConf\": {\n                  \"auto.offset.reset\": \"earliest\"\n                }\n              }\n            }\n          }\n        },\n        \"PRODUCER\": {\n          \"TRANSFER\": {\n            \"PREPARE\": {\n              \"config\": {\n                \"options\": {\n                  \"messageCharset\": \"utf8\"\n                },\n                \"rdkafkaConf\": {\n                  \"metadata.broker.list\": \"cssk-kafka:9092\",\n                  \"client.id\": \"simmsg-prod-transfer-prepare\",\n                  \"event_cb\": true,\n                  \"queue.buffering.max.messages\": 10000000,\n                  \"queue.buffering.max.kbytes\": 20000000,\n                  \"compression.codec\": \"none\",\n                  \"retry.backoff.ms\": 100,\n                  \"message.send.max.retries\": 2,\n                  \"socket.keepalive.enable\": true,\n                  \"batch.num.messages\": 1,\n                  \"api.version.request\": true,\n                  \"dr_cb\": true,\n                  \"statistics.interval.ms\": 1000\n                },\n                \"topicConf\": {\n                  \"request.required.acks\": \"all\",\n                  \"partitioner\": \"murmur2_random\"\n                }\n              }\n            },\n            \"FULFIL\": {\n              \"config\": {\n                \"options\": {\n                  \"messageCharset\": \"utf8\"\n                },\n                \"rdkafkaConf\": {\n                  \"metadata.broker.list\": \"cssk-kafka:9092\",\n                  \"client.id\": \"simmsg-prod-transfer-fulfil\",\n                  \"event_cb\": true,\n                  \"queue.buffering.max.messages\": 10000000,\n                  \"queue.buffering.max.kbytes\": 20000000,\n                  \"compression.codec\": \"none\",\n                  \"retry.backoff.ms\": 100,\n                  \"message.send.max.retries\": 2,\n                  \"socket.keepalive.enable\": true,\n                  \"batch.num.messages\": 1,\n                  \"api.version.request\": true,\n                  \"dr_cb\": true,\n                  \"statistics.interval.ms\": 1000\n                },\n                \"topicConf\": {\n                  \"request.required.acks\": \"all\",\n                  \"partitioner\": \"murmur2_random\"\n                }\n              }\n            }\n          }\n        }\n      }\n\n}\n  \n"
  
---
# Source: simulated-message-handler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: testname-simulated-message-handler
  labels:
    app.kubernetes.io/name: simulated-message-handler
    app.kubernetes.io/instance: testname
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Tiller
    helm.sh/chart: simulated-message-handler-1.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 6868
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: simulated-message-handler
    app.kubernetes.io/instance: testname

---
# Source: simulated-message-handler/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: testname-simulated-message-handler
  labels:
    app.kubernetes.io/name: simulated-message-handler
    app.kubernetes.io/instance: testname
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Tiller
    helm.sh/chart: simulated-message-handler-1.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: simulated-message-handler
      app.kubernetes.io/instance: testname
  template:
    metadata:
      labels:
        app.kubernetes.io/name: simulated-message-handler
        app.kubernetes.io/instance: testname
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: Tiller
        helm.sh/chart: simulated-message-handler-1.0.0
      annotations:
        prometheus.io/port: "6868"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server cssk-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:

      containers:
        - name: simulated-message-handler
          image: "chinchillah/simulated-message-handler:v0.1"
          imagePullPolicy: Always
          # command:
          #   - sh
          #   - -c
          #   - exec tail -f /dev/null
          command:
            - sh
            - "-c"
            - "node src/index.js connect --type notification --action event"
          ports:
            - containerPort: 6868
          volumeMounts:
            - name: testname-simulated-message-handler-config-volume
              mountPath: /opt/app/test/perf/config
          env:
            - name: LOG_LEVEL
              value: 
            - name: CSL_LOG_TRANSPORT
              value: 
      volumes:
        - name: testname-simulated-message-handler-config-volume
          configMap:
            name: testname-simulated-message-handler-config
            items:
              - key: default.json
                path: default.json

---
# Source: simulated-message-handler/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: testname-simulated-message-handler
  labels:
    app.kubernetes.io/name: simulated-message-handler
    app.kubernetes.io/instance: testname
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Tiller
    helm.sh/chart: simulated-message-handler-1.0.0
spec:
  rules:
    - host: "simulated-message-handler.local"
      http:
        paths:
          - path: 
            backend:
              serviceName: testname-simulated-message-handler
              servicePort: http

